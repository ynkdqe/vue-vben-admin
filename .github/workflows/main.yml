name: Main CI/CD

on:
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

env:
  CI: true
  TZ: Asia/Ho_Chi_Minh
  HUSKY: '0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ===== CI Jobs =====
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run tests
        run: pnpm run test:unit

      - name: Run lint
        run: pnpm run lint

      - name: Type check
        run: pnpm check:type

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test-and-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Build web-antd (HRMS)
        run: pnpm run build --filter=@vben/web-antd

      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: web-antd-dist
          path: apps/web-antd/dist/
          retention-days: 1

  # ===== Deploy Job =====
  deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-antd-dist
          path: apps/web-antd/dist/

      - name: Build Docker image
        run: |
          docker build -f scripts/deploy/Dockerfile -t hrms-app:${{ github.sha }} .
          docker tag hrms-app:${{ github.sha }} hrms-app:latest

      - name: Deploy to VPS (Docker)
        run: |
          echo "üöÄ Deploying to VPS..."
          # Add your deployment script here
          # Example: 
          # docker save hrms-app:latest | gzip | ssh user@vps "gunzip | docker load"
          # ssh user@vps "docker stop hrms-app || true && docker rm hrms-app || true"
          # ssh user@vps "docker run -d --name hrms-app -p 80:8080 hrms-app:latest"

  # ===== Status Check =====
  ci-success:
    name: CI Success
    if: always()
    runs-on: ubuntu-latest
    needs: [test-and-lint, build]
    steps:
      - name: Check CI status
        env:
          FAILURE: ${{ contains(join(needs.*.result, ','), 'failure') || contains(join(needs.*.result, ','), 'cancelled') }}
        run: |
          if [ "$FAILURE" = "true" ]; then
            echo "‚ùå CI failed"
            exit 1
          else
            echo "‚úÖ CI passed"
            exit 0
          fi
