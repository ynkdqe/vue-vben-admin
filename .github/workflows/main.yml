name: admin-fe-vue CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'apps/web-antd/**'
      - 'packages/**'
      - 'scripts/deploy/**'
      - '.github/workflows/main.yml'
      - 'Dockerfile'
  pull_request:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

env:
  CI: true
  TZ: Asia/Ho_Chi_Minh
  HUSKY: '0'
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/admin-fe-vue
  DOCKERFILE: scripts/deploy/Dockerfile
  SERVICE_NAME: admin-fe-vue
  CONTAINER_PORT: '8080'
  HEALTH_PATH: none

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ===== Test =====
  test:
    name: Test
    runs-on: [self-hosted, linux, arm64]
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Run tests
        run: pnpm run test:unit

  # ===== Build =====
  build:
    name: Build & Package
    runs-on: [self-hosted, linux, arm64]
    timeout-minutes: 10
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: ./.github/actions/setup-node

      - name: Build Admin Fe Vue App
        run: pnpm run build --filter=@vben/web-antd

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker Image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: true
          platforms: linux/arm64
          build-args: |
            GIT_SHA=${{ github.sha }}
            BUILD_NUMBER=${{ github.run_number }}
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          provenance: false

  # ===== Deploy =====
  deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: [self-hosted, linux, arm64]
    needs: build
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload deploy script
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: scripts/deploy/deploy-blue-green.sh
          target: /home/${{ env.SSH_USER }}/admin-fe-vue

      - name: Deploy with Blue-Green Strategy
        uses: appleboy/ssh-action@v1.2.0
        env:
          IMAGE: ${{ env.IMAGE_NAME }}:latest
          SERVICE: ${{ env.SERVICE_NAME }}
          CPORT: ${{ env.CONTAINER_PORT }}
          HEALTH: ${{ env.HEALTH_PATH }}
          GHCR_USER: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: IMAGE,SERVICE,CPORT,HEALTH,GHCR_USER,GHCR_TOKEN
          script_stop: true
          script: |
            set -euo pipefail
            
            # Setup deploy script
            sudo mkdir -p /home/${{ secrets.VPS_USER }}/admin-fe-vue/scripts
            sudo mv -f /home/${{ secrets.VPS_USER }}/admin-fe-vue/scripts/deploy-blue-green.sh /usr/local/bin/deploy-blue-green.sh || \
            sudo cp -f /home/${{ secrets.VPS_USER }}/admin-fe-vue/scripts/deploy-blue-green.sh /usr/local/bin/deploy-blue-green.sh
            sudo chmod +x /usr/local/bin/deploy-blue-green.sh
            
            # Execute blue-green deployment
            echo "üöÄ Starting blue-green deployment..."
            /usr/local/bin/deploy-blue-green.sh "$IMAGE" "$SERVICE" "$CPORT" "$HEALTH"
            
            echo "‚úÖ admin-fe-vue deployment completed!"
            echo "üåê Access: http://${{ secrets.VPS_HOST }}:8080"
